name: Integration Tests
on:
  push:
    branches:
      - master
    paths:
      - php/sqlcommenter-php/packages/sqlcommenter-laravel/**
      - php/sqlcommenter-php/samples/sqlcommenter-laravel/**
  pull_request:
    paths:
      - php/sqlcommenter-php/packages/sqlcommenter-laravel/**
      - php/sqlcommenter-php/samples/sqlcommenter-laravel/**
jobs:
  integrationtests:
    runs-on: ubuntu-latest
    container:
      image: kirschbaumdevelopment/laravel-test-runner:8.0

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Get Composer Cache Directory
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Get yarn cache
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        id: yarn-cache
        run: echo "dir=$(yarn cache dir)" >> "$GITHUB_OUTPUT"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install composer dependencies
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        run: |
          composer install --no-scripts

      - name: Prepare Laravel Application
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        run: |
          cp .env.ci .env
          php artisan key:generate

      - name: Install front-end dependencies
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        run: |
          npm install
          npm run dev

      - name: Apply migrations
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        run: |
          php artisan migrate

      - name: Publish SQLCommenter Configurations
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        run: |
          php artisan vendor:publish --provider="Google\GoogleSqlCommenterLaravel\GoogleSqlCommenterServiceProvider"

      - name: Run Testsuite
        working-directory: ./php/sqlcommenter-php/samples/sqlcommenter-laravel
        run: vendor/bin/phpunit tests/
